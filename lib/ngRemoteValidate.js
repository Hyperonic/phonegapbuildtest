!function(angular){"use strict";if(!angular)throw"Missing something? Please add angular.js to your project or move this script below the angular.js reference";var directiveId="ngRemoteValidate",remoteValidate=function($http,$timeout,$q,$rootScope){return{restrict:"A",require:["^form","ngModel"],scope:{ngRemoteInterceptors:"=?",callback:"&",errorcallback:"&",isValidEmail:"&",validating:"&"},link:function(scope,el,attrs,ctrls){scope.validating({valid:!1});var cache={},handleChange,setValidation,addToCache,request,shouldProcess,ngForm=ctrls[0],ngModel=ctrls[1],options={ngRemoteThrottle:400,ngRemoteMethod:"POST"};angular.extend(options,attrs),"["===options.ngRemoteValidate.charAt(0)?options.urls=eval(options.ngRemoteValidate):"{"===options.ngRemoteValidate.charAt(0)?(options.keys=eval("("+options.ngRemoteValidate+")"),options.urls=Object.keys(options.keys)):options.urls=[options.ngRemoteValidate],addToCache=function(e){var t=e[0].data.value;return cache[t]?cache[t]:void(cache[t]=e)},shouldProcess=function(e){var t=!1;for(var o in ngModel.$error){var a=!options.hasOwnProperty("keys")||!Object.keys(options.keys).filter(function(e){return options.keys[e]===o})[0];if(ngModel.$error[o]&&o!=directiveId&&a){t=!0;break}}return!0},setValidation=function(e,t){for(var o=0,a=e.length,n=options.hasOwnProperty("keys"),s=!0;a>o&&(scope.ngRemoteInterceptors&&scope.ngRemoteInterceptors.response&&(e[o]=scope.ngRemoteInterceptors.response(e[o])),scope.isValidEmail="Failed"==e[o].data.status?!1:!0,scope.errorcallback({emailError:"Failed"==e[o].data.status?!1:!0}),scope.validating({valid:!1}),scope.callback({emailVal:"Failed"==e[o].data.status||void 0==e[o].data.status?!1:!0}),ngModel.$setValidity(r,"Failed"==e[o].data.status||void 0==e[o].data.status?!1:!0),"Failed"!=e[o].data.status||(s=!1,n));o++){var i=n&&e[o].hasOwnProperty("config")&&options.keys[e[o].config.url];if(i){var r=options.keys[e[o].config.url];ngModel.$setValidity(r,"Failed"==e[o].data.status?!1:!0)}}t||addToCache(e),ngModel.$setValidity(directiveId,s),ngModel.$processing=ngModel.$pending=ngForm.$pending=!1},handleChange=function(e){return ngModel.$pristine||(scope.$root.disableSeatsCheck=!0),"undefined"==typeof e||""===e?(scope.validating({valid:!1}),scope.errorcallback({emailError:!1}),void ngModel.$setPristine()):shouldProcess(e)?cache[e]?setValidation(cache[e],!0):ngModel.$validators.email(e)?(ngModel.$pending||(ngModel.$processing=ngModel.$pending=ngForm.$pending=!0,scope.callback({emailVal:!1})),request&&$timeout.cancel(request),scope.validating({valid:!0}),request=$timeout(function(){var t=[],o=0,a=options.urls.length,n={email:e},s={method:options.ngRemoteMethod};for(scope[el[0].name+"SetArgs"]&&(n=scope[el[0].name+"SetArgs"](e,el,attrs,ngModel)),"POST"==options.ngRemoteMethod?s.data=n:s.params=n;a>o;o++)s.url=options.urls[o],scope.ngRemoteInterceptors&&scope.ngRemoteInterceptors.request&&(s=scope.ngRemoteInterceptors.request(s)),t.push($http(s));$q.all(t).then(setValidation)},options.ngRemoteThrottle),!0):!1:setValidation([{data:{isValid:!0,value:e}}],!0)},scope.$watch(function(){return ngModel.$viewValue},handleChange)}}};angular.module("remoteValidation",[]).constant("MODULE_VERSION","0.6.1").directive(directiveId,["$http","$timeout","$q","$rootScope",remoteValidate])}(this.angular);